/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/cart.js":
/*!*********************!*\
  !*** ./src/cart.js ***!
  \*********************/
/***/ (() => {

eval("const cartItemsContainer = document.querySelector(\".cart-item-total-price-container\");\nconst cartItems = document.querySelector(\".cart-main-item\");\nconst disiplayCart = document.querySelector(\".nav-display-cart\");\nconst itemCartContainer = document.querySelector(\".item-cart-container\");\n\nlet currCartBasket = JSON.parse(sessionStorage.getItem(\"itemCart\")) || [];\n\nwindow.addEventListener(\"DOMContentLoaded\", function () {\n    displayCartItems();\n    cartUpdateCartCount();\n});\n\nfunction displayCartItems() {\n    if (currCartBasket.length !== 0) {\n        console.log(currCartBasket);\n        let itemContainer = currCartBasket\n            .map(function (el) {\n                let basketItems = itemData.filter(function (dataInfo) {\n                    return dataInfo.id === el.id;\n                })[0];\n                return `\n                <div class=\"cart-itemWrapper\" id=product-id-${basketItems.id}>\n                        <div class=\"left-section\">\n                            <img\n                            class=\"cart-img\"\n                            src=\"${basketItems.img}\"\n                            />\n                        </div>\n\n                        <div class=\"right-section\">\n                                <div class=\"item-info\">\n                                    <h4>${basketItems.name}</h4>\n                                    <h4>${makeMoneyComma(basketItems.price)} 원</h4>\n                                </div>\n                                <div class=\"item-desc\">${basketItems.desc}</div>\n                                <div class=\"item-count\">\n                                    <span onclick=\"decrement('${\n                                        basketItems.id\n                                    }')\"  class=\"count-btn\">-</span>\n                                    <span id = '${basketItems.id}'> ${el.countItem}</span>\n                                    <span onclick=\"increment('${\n                                        basketItems.id\n                                    }','${basketItems.name}','${el.price}')\" class=\"count-btn\">+</span>\n                                </div>\n                        </div>\n                </div>            \n                `;\n            })\n            .join(\"\");\n        cartItems.innerHTML = itemContainer;\n\n        let receiptContainer =\n            `  <div class=\"cart-item-total-price\">` +\n            `<h3>영수증</h3>` +\n            currCartBasket\n                .map(function (currItem) {\n                    let itemSum = currItem.countItem * currItem.price;\n                    return `\n            \n            <div class=\"receiptWrapper\">\n                <div class=\"recipetItemsInfo\">${\n                    currItem.name\n                } * <span class='cartCountItem'>${currItem.countItem} </span> </div>\n                <div>=</div>\n                <div class=\"reciptItemTotal\">${makeMoneyComma(\n                    itemSum\n                )} <span class='unit'>원</span></div>\n            </div>\n            `;\n                })\n                .join(\"\") +\n            `\n                <div class=\"receiptTotalContainer\">\n                    <div class=\"recipetItemsInfo\">총금액</div>\n            ${getTotalPrice()}\n                </div>\n            </div>\n                `;\n\n        cartItemsContainer.innerHTML = receiptContainer;\n    } else {\n        cartItems.innerHTML = \"\";\n        cartItemsContainer.innerHTML = \"\";\n        const showCartStatus = document.createElement(\"div\");\n        showCartStatus.classList = \"displayEmpty\";\n        showCartStatus.textContent = \"장바구니가 비어있습니다.\";\n        itemCartContainer.appendChild(showCartStatus);\n        // itemCartContainer.innerHTML = `< class='displayEmpty> 장바구니가 비어있습니다.</div>`;\n    }\n}\n\nfunction getTotalPrice() {\n    let totalPrice = currCartBasket.reduce(function (currItem, nextItem) {\n        return currItem + nextItem.countItem * nextItem.price;\n    }, 0);\n\n    return ` \n    <div class=\"reciptItemsTotal\">${makeMoneyComma(\n        totalPrice\n    )} <span class='totalUnit'>원</span></div>\n    `;\n}\n\nfunction cartUpdateCartCount() {\n    let totalItemCount = currCartBasket.reduce(function (curr, next) {\n        return curr + next.countItem;\n    }, 0);\n    disiplayCart.textContent = totalItemCount;\n}\n\nfunction increment(itemId, itemName, itemPrice) {\n    let getItemCount = currCartBasket.find((el) => el.id === itemId);\n\n    if (getItemCount === undefined) {\n        currCartBasket.push({\n            id: itemId,\n            name: itemName,\n            price: itemPrice,\n\n            countItem: 1,\n        });\n    } else {\n        getItemCount.countItem += 1;\n    }\n\n    updateDom(itemId);\n    displayCartItems();\n\n    sessionStorage.setItem(\"itemCart\", JSON.stringify(currCartBasket));\n}\n\nfunction decrement(itemId) {\n    let getItemCount = currCartBasket.find((el) => el.id === itemId);\n\n    if (getItemCount === undefined) return;\n    else if (getItemCount.countItem === 0) return;\n    else {\n        getItemCount.countItem -= 1;\n    }\n\n    updateDom(itemId);\n    currCartBasket = currCartBasket.filter(function (el) {\n        return el.countItem !== 0;\n    });\n    displayCartItems();\n\n    sessionStorage.setItem(\"itemCart\", JSON.stringify(currCartBasket));\n}\n\nfunction updateDom(id) {\n    const totalPriceDom = document.querySelector(\".reciptItemsTotal\");\n    let updateTotalPrice = getTotalPrice();\n\n    let getItemCount = currCartBasket.find(function (el) {\n        return el.id === id;\n    });\n\n    console.log(currCartBasket);\n\n    document.getElementById(id).innerHTML = getItemCount.countItem;\n\n    cartUpdateCartCount();\n}\n\nfunction cartUpdateCartCount() {\n    let totalItemCount = currCartBasket.reduce(function (curr, next) {\n        return curr + next.countItem;\n    }, 0);\n    disiplayCart.textContent = totalItemCount;\n}\n\nfunction applyCountBtn(itemData) {\n    let itemCount = document.querySelector(\".item-count\");\n}\n\nfunction applyMenuBtn(itemData) {\n    let data = itemData.reduce(\n        function (currVal, next) {\n            if (!currVal.includes(next.category)) {\n                currVal.push(next.category);\n            }\n            return currVal;\n        },\n        [\"전체\"]\n    );\n    // menuBtn\n    let displayData = data\n        .map(function (el) {\n            let changeLang = \"\";\n\n            switch (el) {\n                case \"china\":\n                    changeLang = \"중식\";\n                    break;\n\n                case \"usa\":\n                    changeLang = \"양식\";\n                    break;\n\n                case \"korea\":\n                    changeLang = \"한식\";\n                    break;\n\n                case \"japan\":\n                    changeLang = \"일식\";\n                    break;\n\n                case \"desert\":\n                    changeLang = \"디저트\";\n\n                    break;\n                default:\n                    changeLang = \"전체\";\n            }\n\n            return `\n        <button class=\"menu-btn\" data-btnid=${el} id=${el}>${changeLang}</button>\n        `;\n        })\n        .join(\"\");\n\n    menuBtn.innerHTML = displayData;\n\n    displayMenuBtn();\n}\n\nfunction displayMenuBtn() {\n    let filterBtn = menuBtn.querySelectorAll(\".menu-btn\");\n\n    filterBtn.forEach(function (el) {\n        el.addEventListener(\"click\", function (e) {\n            let categoryName = e.currentTarget.dataset.btnid;\n\n            let filterItems = itemData.filter(function (el2) {\n                return el2.category === categoryName;\n            });\n\n            if (categoryName === \"전체\") {\n                displayMenuItems(itemData);\n            } else {\n                displayMenuItems(filterItems);\n            }\n        });\n    });\n}\n\nfunction makeMoneyComma(beforeComma) {\n    return beforeComma.toLocaleString();\n}\n\n\n//# sourceURL=webpack://vanilla_js_shopping_cart/./src/cart.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/cart.js"]();
/******/ 	
/******/ })()
;